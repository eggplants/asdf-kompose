#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit
IFS=$'\t\n'

asdf_kompose_fail() {
  echo >&2 "â›” $*"
  exit 1
}

asdf_get_arch() {
  local arch
  arch="$(uname -m)"
  case $arch in
    amd64 | x86_64)
      echo "amd64"
      ;;
    arm64)
      echo "arm64"
      ;;
    aarch64)
      echo "arm64"
      ;;
    *) 
      echo ""
  esac
}

asdf_kompose_download_wget() {
  local KOMPOSE_PACKAGE_OS_TYPE="$1"
  local KOMPOSE_PACKAGE_ARCH="$2"
  # Download archive
  wget -O "kompose" "https://github.com/kubernetes/kompose/releases/download/v${ASDF_INSTALL_VERSION}/kompose-${KOMPOSE_PACKAGE_OS_TYPE}-${KOMPOSE_PACKAGE_ARCH}"
}

asdf_kompose_download_curl() {
  local KOMPOSE_PACKAGE_OS_TYPE="$1"
  local KOMPOSE_PACKAGE_ARCH="$2"
  # Download archive
  curl -sSL -o "kompose" "https://github.com/kubernetes/kompose/releases/download/v${ASDF_INSTALL_VERSION}/kompose-${KOMPOSE_PACKAGE_OS_TYPE}-${KOMPOSE_PACKAGE_ARCH}"
}

asdf_kompose_download() {
  local KOMPOSE_PACKAGE_OS_TYPE=""
  if [[ "$OSTYPE" == "linux-gnu"* || "$OSTYPE" == "cygwin" ]]; then
    KOMPOSE_PACKAGE_OS_TYPE="linux"
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    KOMPOSE_PACKAGE_OS_TYPE="darwin"
  elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
    KOMPOSE_PACKAGE_OS_TYPE="windows"
  else
    asdf_kompose_fail "Unknown or unsupported OS type. Please raise a issue."
  fi

  local KOMPOSE_PACKAGE_ARCH
  KOMPOSE_PACKAGE_ARCH="$(asdf_get_arch)"
  if [[ -z "$KOMPOSE_PACKAGE_ARCH" ]]; then
    asdf_kompose_fail "Unknown or unsupported architecture. Please raise a issue."
  fi

  if [ -x "$(which wget)" ]; then
    asdf_kompose_download_wget "$KOMPOSE_PACKAGE_OS_TYPE" "$KOMPOSE_PACKAGE_ARCH" 
  else
    if [ -x "$(which curl)" ]; then
      asdf_kompose_download_curl "$KOMPOSE_PACKAGE_OS_TYPE" "$KOMPOSE_PACKAGE_ARCH"
    fi
  fi
}

asdf_kompose_install() {
  local ASDF_KOMPOSE_DIR=""
  ASDF_KOMPOSE_DIR="$(mktemp -d -t asdf-kompose-XXXXXXX)"
  echo "Installing kompose v${ASDF_INSTALL_VERSION} in ${ASDF_INSTALL_PATH}"
  (
    cd "${ASDF_KOMPOSE_DIR}"

    asdf_kompose_download
  )

  if [ -d "${ASDF_INSTALL_PATH}" ]; then
    # Remove existing install directory
    rm -fR "${ASDF_INSTALL_PATH}"
  fi

  # Create parent directory, if necessary
  mkdir -p "$(dirname "${ASDF_INSTALL_PATH}/bin")"

  # Finish the installation
  mv "${ASDF_KOMPOSE_DIR}" "${ASDF_INSTALL_PATH}/bin"
  chmod 0755 "$ASDF_INSTALL_PATH"/bin/kompose
}

[ "${ASDF_INSTALL_TYPE}" == 'ref' ] && asdf_kompose_fail "This plugin does not support installing by ref."
[ -z "${ASDF_INSTALL_VERSION}" ] && asdf_kompose_fail "Unspecified install version."
[ -z "${ASDF_INSTALL_PATH}" ] && asdf_kompose_fail "No installation directory was provided. Are you running this command via asdf? Try running 'asdf install kompose <version>'"
[[ -x "$(which wget)" ]] || [[ -x "$(which curl)" ]] || asdf_kompose_fail "Missing one of either of the following dependencies: wget, curl"

asdf_kompose_install "$*"
